{
  "comments": [
    {
      "key": {
        "uuid": "7b5339ee_0107f8cf",
        "filename": "tests/assets/info/minimal/remote.yml",
        "patchSetId": 1
      },
      "lineNbr": 3,
      "author": {
        "id": 442
      },
      "writtenOn": "2018-06-27T19:01:29Z",
      "side": 1,
      "message": "Maybe consider a format of name: url. This would then become\nextra: tests/assets/info/remote-extra-1",
      "range": {
        "startLine": 2,
        "startChar": 2,
        "endLine": 3,
        "endChar": 48
      },
      "revId": "4262600b5a39beb7bf0b880efec3acf508a577fc",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4fa8d1ed_4d2959b8",
        "filename": "tests/assets/info/minimal/remote.yml",
        "patchSetId": 1
      },
      "lineNbr": 3,
      "author": {
        "id": 421
      },
      "writtenOn": "2018-06-29T11:09:17Z",
      "side": 1,
      "message": "Nope, that\u0027s oversimplification. This dict is actually a **kwargs passed to DistroInfo constructor, so you can fully control your info repo setup through here. That includes passing local_info, remote_info or remote_git_info or even cache_ttl as needed - all this would be lost.",
      "parentUuid": "7b5339ee_0107f8cf",
      "range": {
        "startLine": 2,
        "startChar": 2,
        "endLine": 3,
        "endChar": 48
      },
      "revId": "4262600b5a39beb7bf0b880efec3acf508a577fc",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f0ba5185_dc489dc7",
        "filename": "tests/assets/info/minimal/remote.yml",
        "patchSetId": 1
      },
      "lineNbr": 3,
      "author": {
        "id": 442
      },
      "writtenOn": "2018-06-29T16:00:40Z",
      "side": 1,
      "message": "That is a fair point. I wonder then if a little more formatting is needed. Something along the lines of:\n\nremotes:\n   extra:\n       type: local_info\n       uri: tests/assets/info/remote-extra-1\n   other:\n       type: remote_info\n       uri: https://www.mycoolsite/distroinfo\n\nThis is just a suggestion. I don\u0027t see anything wrong with the current format, but maybe seeing how it would scale to a few other remotes would help to convince me. :-)",
      "parentUuid": "4fa8d1ed_4d2959b8",
      "range": {
        "startLine": 2,
        "startChar": 2,
        "endLine": 3,
        "endChar": 48
      },
      "revId": "4262600b5a39beb7bf0b880efec3acf508a577fc",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fcc51d55_532dcc17",
        "filename": "tests/assets/info/minimal/remote.yml",
        "patchSetId": 1
      },
      "lineNbr": 3,
      "author": {
        "id": 421
      },
      "writtenOn": "2018-07-02T16:02:40Z",
      "side": 1,
      "message": "I\u0027d keep this 1:1 with DistroInfo.__init__() arguments, so an example would be:\n\n    remotes:\n       extra:\n           local_info: /path/to/whatevers\n           cache_ttl: 1200\n       other:\n           remote_info: https://stuff.omg/whatevers\n           cache_ttls: 1600\n       other-git:\n           remote_git_info: git://suff.omg/whatevers.git\n\nWhich would map to:\n\n    DistroInfo(PASSED_FROM_IMPORT, local_info\u003d\u0027/path/to/whatevers\u0027, cache_ttl\u003d1200)\n\nWhile there isn\u0027t many useful arguments at this moment, this syntax requires no mapping/transofrmation and will work even when DistroInfo.__init__() changes without the need to update the module or the format itself.",
      "parentUuid": "f0ba5185_dc489dc7",
      "range": {
        "startLine": 2,
        "startChar": 2,
        "endLine": 3,
        "endChar": 48
      },
      "revId": "4262600b5a39beb7bf0b880efec3acf508a577fc",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1235923f_9de07e1b",
        "filename": "tests/assets/info/minimal/remote.yml",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 442
      },
      "writtenOn": "2018-06-27T19:01:29Z",
      "side": 1,
      "message": "Maybe consider a list of name: file pairs, that would save you the regex processing. Also enforce a \u0027default\u0027 or \u0027base\u0027 that has to be in the list or an exception is raised.\n\nimport:\n - default: minimal.yml\n - extra: extra.yml\n - another: more.yml",
      "range": {
        "startLine": 6,
        "startChar": 2,
        "endLine": 7,
        "endChar": 22
      },
      "revId": "4262600b5a39beb7bf0b880efec3acf508a577fc",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37e7d3ca_ac25dce5",
        "filename": "tests/assets/info/minimal/remote.yml",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 421
      },
      "writtenOn": "2018-06-29T11:09:17Z",
      "side": 1,
      "message": "I considered that as a first option, but this has the advantage of each entry being a string (info_files is a vector of strings) and the same string could be passed to DistroInfo.fetcher.fetch and it would do the same thing.\n\nWith this suggestion, info_files would be a list of strings mixed with dicts... I prefer regex to type checks which aren\u0027t reccommended practice in python.\n\nI\u0027m 50:50 on this, needs more convincing ;)",
      "parentUuid": "1235923f_9de07e1b",
      "range": {
        "startLine": 6,
        "startChar": 2,
        "endLine": 7,
        "endChar": 22
      },
      "revId": "4262600b5a39beb7bf0b880efec3acf508a577fc",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b59f0b6_48e384d5",
        "filename": "tests/assets/info/minimal/remote.yml",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 442
      },
      "writtenOn": "2018-06-29T16:00:40Z",
      "side": 1,
      "message": "If use these as key value pairs you can then match remote_info items to file that need to be imported, without have to worry about regex error handling. If someone incorrectly follows the format, the error could be non-obvious to the user. I find that string parsing can be very error prone at scale, with several edge cases needing to be accounted for as more information is added.\n\nUsing the key/value pair also keeps the file consistent in the import section and the remote-info section were key/values are being used. This makes validating the file in the future easier since a special case is not being injected.\n\nIf handling the key/value pairs is not desired. You could also look at special tag handlers that can be added to the constructor of the yaml parser. Then you do something like:\n\nimport:\n   - !importer extra extra.yml\n\nThe code for handling the \u0027!importer\u0027 tag could then format the data however it needs to be consumed. I have done something like this in the past and I am willing to help out, if this works better.",
      "parentUuid": "37e7d3ca_ac25dce5",
      "range": {
        "startLine": 6,
        "startChar": 2,
        "endLine": 7,
        "endChar": 22
      },
      "revId": "4262600b5a39beb7bf0b880efec3acf508a577fc",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c783c22_72c8dc82",
        "filename": "tests/assets/info/minimal/remote.yml",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 532
      },
      "writtenOn": "2018-06-29T17:12:16Z",
      "side": 1,
      "message": "Well, I would think the simpler route (involving a type check) is less error-prone for users and involves slightly less complicated code.\n\nType-checking has its uses. Python has it. Not all languages do.\n\nI\u0027d contend that this is one of the cases where performing a type check both valid and appropriate.",
      "parentUuid": "8b59f0b6_48e384d5",
      "range": {
        "startLine": 6,
        "startChar": 2,
        "endLine": 7,
        "endChar": 22
      },
      "revId": "4262600b5a39beb7bf0b880efec3acf508a577fc",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cb1932fc_e2c25ed5",
        "filename": "tests/assets/info/minimal/remote.yml",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 421
      },
      "writtenOn": "2018-07-02T16:02:40Z",
      "side": 1,
      "message": "OK, I\u0027ll change to dict in next iteration.",
      "parentUuid": "5c783c22_72c8dc82",
      "range": {
        "startLine": 6,
        "startChar": 2,
        "endLine": 7,
        "endChar": 22
      },
      "revId": "4262600b5a39beb7bf0b880efec3acf508a577fc",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    }
  ]
}